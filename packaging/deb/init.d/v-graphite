#! /usr/bin/env bash

### BEGIN INIT INFO
# Provides:          coder-van
# Required-Start:    $all
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start v-graphite at boot time
### END INIT INFO


PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=v-graphite
DESC="graphite server"
DEFAULT=/etc/default/v-graphite

PID_FILE=/var/run/$NAME.pid
PROG=/usr/sbin/$NAME

umask 0027

if [ ! -x $PROG ]; then
    echo "Program not installed or not executable"
    exit 5
fi

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
    . /etc/default/rcS
fi

# overwrite settings from default file
if [ -f "$DEFAULT" ]; then
	. "$DEFAULT"
fi

#
if [ -n "$MAX_OPEN_FILES" ]; then
    ulimit -n $MAX_OPEN_FILES
fi

function checkUser() {
    if [ `id -u` -ne 0 ]; then
  	    echo "You need root privileges to run this script"
  	    exit 4
    fi
}


case "$1" in
    start)
        checkUser
	    log_daemon_msg "Starting $DESC $NAME"

	    pid=`pidofproc -p $PID_FILE v-graphite`
	    if [ -n "$pid" ] ; then
		    log_begin_msg "Already running."
		    log_end_msg 0
		    exit 0
	    fi

	    # Start Daemon
	    start-stop-daemon --start -b -m  --pidfile "$PID_FILE" --exec $PROG
	    return=$?
	    if [ $return -eq 0 ]
	    then
	        sleep 1

            # check if pid file has been written
	        if ! [[ -s $PID_FILE ]]; then
	            log_end_msg 1
	            exit 1
	        fi
        fi
        log_end_msg "$return"
	;;
    stop)
        checkUser
	    log_daemon_msg "Stopping $DESC"

	    if [ -f "$PID_FILE" ]; then
		    start-stop-daemon --stop --pidfile "$PID_FILE" \
			    --retry=TERM/20/KILL/5 >/dev/null
		    if [ $? -eq 1 ]; then
			    log_progress_msg "$DESC is not running but pid file exists, cleaning up"
		    elif [ $? -eq 3 ]; then
			    PID="`cat $PID_FILE`"
			    log_failure_msg "Failed to stop $DESC (pid $PID)"
			exit 1
		    fi
		    rm -f "$PID_FILE"
	    else
		    log_progress_msg "(not running)"
	    fi
	    log_end_msg 0
	;;
    status)
	    status_of_proc -p $PID_FILE v-graphite v-graphite && exit 0 || exit $?
    ;;
    restart|force-reload)
	    if [ -f "$PID_FILE" ]; then
		    $0 stop
		    sleep 1
	    fi
	    $0 start
	;;
    *)
	    log_success_msg "Usage: $0 {start|stop|restart|force-reload|status}"
	    exit 3
	;;
esac
